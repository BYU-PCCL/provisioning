- name: ssh
  hosts: all
  tags:
    - bootstrap
    - ssh
  vars:
    - ssh_key_file: .ssh/id_rsa
    - remote_sudoers:
        - user: remote
          # http://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-crypted-passwords-for-the-user-module
          password: $6$Bs1Xag.d9LQBKOl$mXq16bjxzDx.AgsXV7torN2dybAF8O/wwcQYGm9qRrvwmzgBuyBKQ7vgXmwxHMBuwXwZRBuF81v92JhN1rL8z.

  tasks:
    - name: ssh | Create 'sudo' group
      group:
        name: sudo
        state: present
      become: yes

    - name: ssh | Allow 'sudo' group to have sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL:ALL) ALL'
        validate: visudo -cf %s
      become: yes

    - name: ssh | Create user and add to sudo group
      user:
        name: "{{ item.user }}"
        state: present
        password: "{{ item.password }}"
        update_password: always
        shell: /bin/bash
        generate_ssh_key: no
        groups: sudo
        append: yes
      with_items: "{{ remote_sudoers }}"
      become: yes

    - name: ssh | Create new ssh key-pair on localhost
      user:
        name: "{{ lookup('env', 'USER') }}"
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: "{{ ssh_key_file }}"
      delegate_to: localhost
      become: no

    - name: ssh | Upload new public ssh key
      authorized_key:
        user: "{{ item.user }}"
        key: "{{ lookup('file', lookup('env','HOME') + '/' + ssh_key_file + '.pub') }}"
        manage_dir: yes
      with_items: "{{ remote_sudoers }}"
      become: yes

  # TODO: modify ~/.ssh/config and add all PCCL hosts
