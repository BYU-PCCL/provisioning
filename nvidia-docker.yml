- name: nvidia-docker
  hosts: all
  gather_facts: yes
  tags:
    - bootstrap
    - nvidia-docker
  vars:
    - nvidia_docker_packages:
        - name: nvidia-docker2
    - nvidia_docker_packages_state: present
    - nvidia_docker_repositories:
        - repo: "deb https://nvidia.github.io/libnvidia-container/{{ ansible_distribution | lower }}{{ ansible_distribution_version }}/$(ARCH) /"
          filename: nvidia-docker
        - repo: "deb https://nvidia.github.io/nvidia-container-runtime/{{ ansible_distribution | lower }}{{ ansible_distribution_version }}/$(ARCH) /"
          filename: nvidia-docker
        - repo: "deb https://nvidia.github.io/nvidia-docker/{{ ansible_distribution | lower }}{{ ansible_distribution_version }}/$(ARCH) /"
          filename: nvidia-docker
  tasks:
    - name: "nvidia-docker | Configure apt key"
      apt_key:
        url: https://nvidia.github.io/nvidia-docker/gpgkey
        id: C95B321B61E88C1809C4F759DDCAE044F796ECB0
        state: "{{ nvidia_docker_packages_state }}"
      become: yes

    - name: "nvidia-docker | Configure apt repositories"
      apt_repository:
        repo: "{{ item.repo | default(item) }}"
        # TODO: add default with regex...
        filename: "{{ item.filename }}"
        update_cache: yes
        state: "{{ nvidia_docker_packages_state }}"
      with_items: "{{ nvidia_docker_repositories }}"
      become: yes

    - name: "nvidia-docker | Configure nvidia-docker"
      apt:
        name: "{{ item.name }}"
        state: "{{ item.state | default(nvidia_docker_packages_state) }}"
      with_items: "{{ nvidia_docker_packages }}"
      become: yes
      notify: Restart docker

    - name: "nvidia-docker | Gather gpu information"
      command: nvidia-smi -q
      register: nvidia_smi

    - name: "docker | Ensure configuration directory is present"
      file:
        path: /etc/systemd/system/docker.service.d/
        state: directory
      become: yes

    - name: "nvidia-docker | Configure nvidia-docker"
      copy:
        content: |+
          [Service]
          ExecStart=
          ExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375 --default-runtime=nvidia {{ nvidia_smi.stdout | regex_findall('UUID\s+:\s+(GPU-\w+)-.*') | map('regex_replace', '^(.*)$', '--node-generic-resource gpu=\1') | list | join(' ') }}
        dest: /etc/systemd/system/docker.service.d/override.conf
      become: yes
      notify: Restart docker

    - name: "nvidia-docker | Configure nvidia container runtime"
      lineinfile:
        dest: /etc/nvidia-container-runtime/config.toml
        state: present
        regexp: '^#?\s*swarm-resource'
        line: 'swarm-resource = "DOCKER_RESOURCE_GPU"'
      become: yes
      notify: Restart docker
  handlers:
    - name: "docker | Restart docker service"
      systemd:
        name: docker
        state: restarted
        masked: no
        daemon_reload: yes
      listen: Restart docker
      become: yes
