- name: nvidia
  hosts: all
  gather_facts: no
  tags:
    - bootstrap
    - nvidia
  vars:
    - cudnn_url: http://developer.download.nvidia.com/compute/redist/cudnn/v6.0/cudnn-8.0-linux-x64-v6.0.tgz
    - nvidia_packages_state: present
    - nvidia_packages:
        - name: nvidia-cuda-dev
        # - name: nvidia-390 or nvidia-384 (automatically installed as a dependency)
  tasks:
    - name: nvidia | Blacklist nouveau kernel module
      kernel_blacklist:
        name: nouveau
        blacklist_file: /etc/modprobe.d/blacklist-nouveau.conf
        state: "{{ nvidia_packages_state }}"
      become: yes
      notify: Reboot host

    - name: nvidia | Configure ppa:graphics-drivers apt repository
      apt_repository:
        repo: ppa:graphics-drivers
        update_cache: yes
        state: "{{ nvidia_packages_state }}"
      become: yes

    - name: nvidia | Configure nvidia and cuda
      apt:
        name: "{{ item.name }}"
        state: "{{ nvidia_packages_state }}"
        autoremove: yes
        install_recommends: yes
      with_items: "{{ nvidia_packages }}"
      become: yes
      notify: Reboot host

    # TODO: check existing cuddn version
    - name: nvidia | Configure cudnn
      unarchive:
        src: "{{ cudnn_url }}"
        remote_src: yes
        dest: "{{ item.dest }}"
        mode: u+r
        creates: "{{ item.dest }}/{{ item.creates }}"
        exclude: "{{ item.exclude }}"
        extra_opts: --strip-components=2
      with_items:
        - exclude: cuda/lib64
          dest: /usr/include
          creates: cudnn.h
        - exclude: cuda/include
          dest: /usr/lib/x86_64-linux-gnu
          creates: libcudnn.so
      become: yes
  handlers:
    - name: nvidia | Reboot host
      command: shutdown -r now "Reboot triggered by Ansible"
      async: 0
      poll: 0
      ignore_errors: yes
      listen: Reboot host
      become: yes

    - name: nvidia | Wait for host to reboot
      wait_for_connection:
        delay: 3
      listen: Reboot host
      become: no
