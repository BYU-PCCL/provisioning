- name: docker
  hosts: all
  tags:
    - bootstrap
    - docker
  vars:
    - docker_packages:
        - name: docker-ce
        - name: docker-compose
    - docker_packages_state: present
    - docker_apt_release_channel: stable
    - docker_apt_repository: "deb https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"
  tasks:
    - name: docker | Configure dependencies
      apt:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
      become: yes
      with_items:
        - name: docker
          state: absent
        - name: docker-engine
          state: absent
        - name: apt-transport-https
          state: present
        - name: ca-certificates
          state: present

    - name: docker | Configure apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
        state: "{{ docker_packages_state }}"
      become: yes

    - name: docker | Configure repository
      apt_repository:
        repo: "{{ docker_apt_repository }}"
        state: present
        update_cache: yes
      become: yes

    - name: docker | Configure
      apt:
        name: "{{ item.name }}"
        state: "{{ item.state | default(docker_packages_state) }}"
        autoremove: yes
      with_items: "{{ docker_packages }}"
      become: yes

    - name: docker | Configure remote API
      copy:
        content: |+
          # See: https://coreos.com/os/docs/latest/customizing-docker.html
          Description=Docker Socket for the API

          [Socket]
          ListenStream=2375
          BindIPv6Only=both
          Service=docker.service

          [Install]
          WantedBy=sockets.target
        dest: /etc/systemd/system/docker-tcp.socket
      become: yes
      notify: Restart docker socket
  handlers:
    - name: docker | Stop docker service
      systemd:
        name: docker
        state: stopped
        daemon_reload: no
      listen: Restart docker socket
      become: yes

    - name: docker | Restart docker socket service
      systemd:
        name: docker-tcp.socket
        state: restarted
        enabled: yes
        daemon_reload: yes
      listen: Restart docker socket
      become: yes

    - name: docker | Restart docker service
      systemd:
        name: docker
        state: started
        enabled: yes
        daemon_reload: yes
      listen: Restart docker socket
      become: yes
